{"version":3,"sources":["components/Dashboard.jsx","todo/InputTodo.jsx","todo/ListTodo.jsx","todo/Todo.jsx","components/Navigation.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","paper","padding","spacing","textAlign","color","palette","text","secondary","root","formControl","margin","button","flexGrow","CenteredGrid","classes","useState","weight","setWeight","height","setHeight","age","setAge","gender","setGender","activeLevel","setActiveLevel","myCalories","setMyCalories","className","Grid","container","justify","item","xs","sm","TextField","fullWidth","id","type","label","variant","value","onChange","e","target","FormControl","InputLabel","htmlFor","Select","native","inputProps","name","aria-label","RadioGroup","row","FormControlLabel","control","Radio","Button","onClick","toFixed","InputTodo","props","action","setAction","alignContent","Input","task","length","axios","post","then","res","data","getTodos","console","log","ListTodo","width","maxWidth","backgroundColor","background","listItem","todos","deleteTodo","map","todo","Fragment","ListItem","key","_id","Typography","Divider","Paper","Todo","setTodos","useEffect","get","catch","err","delete","menuButton","marginRight","title","navigations","MenuAppBar","React","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","IconButton","edge","to","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","App","createMuiTheme","primary","main","light","dark","ThemeProvider","path","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.85e217de.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  root: {\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    button: {\n      margin: theme.spacing(1, 0, 1, 0),\n    },\n    flexGrow: 1,\n  },\n}));\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  const [weight, setWeight] = useState(\"\");\n  const [height, setHeight] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"male\");\n  const [activeLevel, setActiveLevel] = useState(\"\");\n  const [myCalories, setMyCalories] = useState(0);\n\n  const handleSubmit = () => {\n    let myCalories = 0;\n    if (gender === \"male\") {\n      myCalories =\n        (66 + 6.2 * weight + 12.7 * height - 6.76 * age) *\n        (activeLevel ? activeLevel : 1);\n      setMyCalories(myCalories.toFixed(2));\n    } else {\n      myCalories =\n        (655.1 + 4.35 * weight + 4.7 * height - 4.7 * age) *\n        (activeLevel ? activeLevel : 1);\n      setMyCalories(myCalories.toFixed(2));\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={11} sm={8}>\n          <h2>\n            Please enter your info down below to calculate your calories lost\n            per day.\n          </h2>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"weight\"\n            type=\"Number\"\n            label=\"Weight (lbs)\"\n            variant=\"outlined\"\n            value={weight}\n            onChange={(e) => setWeight(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"height\"\n            type=\"Number\"\n            label=\"Height (inches)\"\n            variant=\"outlined\"\n            value={height}\n            onChange={(e) => setHeight(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"age\"\n            type=\"Number\"\n            label=\"Age\"\n            variant=\"outlined\"\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            fullWidth\n          >\n            <InputLabel htmlFor=\"outlined-age-native-simple\">\n              Active Label\n            </InputLabel>\n            <Select\n              native\n              value={activeLevel}\n              onChange={(e) => {\n                setActiveLevel(e.target.value);\n              }}\n              inputProps={{\n                name: \"activeLevel\",\n                id: \"outlined-age-native-simple\",\n              }}\n            >\n              <option value=\"\" aria-label=\"None\" />\n              <option value={1.2}>Little to None</option>\n              <option value={1.37}>Slightly</option>\n              <option value={1.55}>Moderate</option>\n              <option value={1.725}>Very</option>\n              <option value={1.9}>Extra</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <RadioGroup\n            row\n            aria-label=\"gender\"\n            name=\"gender1\"\n            value={gender}\n            onChange={(e) => setGender(e.target.value)}\n            className=\"Center\"\n          >\n            <FormControlLabel\n              value=\"female\"\n              control={<Radio />}\n              label=\"Female\"\n            />\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n          </RadioGroup>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Calculate\n          </Button>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <Button\n            onClick={() => {\n              setAge(\"\");\n              setGender(\"male\");\n              setHeight(\"\");\n              setWeight(\"\");\n              setActiveLevel(\"\");\n              setMyCalories(0);\n            }}\n            color=\"secondary\"\n          >\n            Clear\n          </Button>\n        </Grid>\n\n        <Grid item xs={11} sm={7}>\n          <h2>{`You've lost : ${myCalories} calories today.`}</h2>\n          <p>&copy; Sangeet Subedi, 2020</p>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Input, Button } from \"@material-ui/core\";\n\nfunction InputTodo(props) {\n  const [action, setAction] = useState(\"\");\n\n  const addTodo = () => {\n    const task = { action: action };\n\n    if (task.action && task.action.length > 0) {\n      axios.post(\"/api/todos\", task).then((res) => {\n        if (res.data) {\n          props.getTodos();\n          setAction(\"\");\n        }\n      });\n    } else {\n      console.log(\"input field required\");\n    }\n  };\n\n  return (\n    <Grid container justify=\"center\" alignContent=\"center\" spacing={2}>\n      <Grid item xs={11} sm={7}>\n        <Input\n          fullWidth\n          type=\"text\"\n          onChange={(e) => setAction(e.target.value)}\n          value={action}\n        />\n      </Grid>\n      <Grid item xs={11} sm={7}>\n        <Button color=\"primary\" variant=\"outlined\" onClick={addTodo}>\n          Add Todo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default InputTodo;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction ListTodo(props) {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    listItem: {\n      backgroundColor: \"#F0F8FF\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const { todos, deleteTodo } = props;\n  return (\n    <div>\n      {todos && todos.length > 0 ? (\n        todos.map((todo) => {\n          return (\n            <React.Fragment>\n              <Grid container justify=\"center\" alignContent=\"center\">\n                <Grid item xs={10} sm={6} className={classes.listItem}>\n                  <ListItem key={todo._id}>\n                    <Typography>{todo.action}</Typography>\n                  </ListItem>\n                  <Divider />\n                </Grid>\n\n                <Grid item xs={1} sm={1}>\n                  <Button\n                    key={todo._id}\n                    onClick={() => deleteTodo(todo._id)}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                  >\n                    <DeleteIcon /> Delete\n                  </Button>\n                </Grid>\n              </Grid>\n              <br></br>\n            </React.Fragment>\n          );\n        })\n      ) : (\n        <Paper>\n          <ListItem> No Todo(s)</ListItem>\n        </Paper>\n      )}\n    </div>\n  );\n}\n\nexport default ListTodo;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InputTodo from \"./InputTodo\";\nimport ListTodo from \"./ListTodo\";\n\nfunction Todo() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const getTodos = () => {\n    axios\n      .get(\"/api/todos\")\n      .then((res) => {\n        if (res.data) {\n          setTodos(res.data);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const deleteTodo = (id) => {\n    axios\n      .delete(`/api/todos/${id}`)\n      .then((res) => {\n        if (res.data) {\n          getTodos();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"Center\">\n      <h1> My Todo(s) </h1>\n      <InputTodo getTodos={getTodos} />\n      <br></br>\n      <ListTodo todos={todos} deleteTodo={deleteTodo} />\n    </div>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Link } from \"react-router-dom\";\nimport Todo from \"../todo/Todo\";\nimport Dashboard from \"./Dashboard\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navigations: {\n    color: \"#ffffff\",\n    flexGrow: 0.02,\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n}));\n\nfunction MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Link to=\"/\" className={classes.navigations}>\n            <Typography variant=\"h6\">Calclories</Typography>\n          </Link>\n          <Link to=\"/todos\" className={classes.navigations}>\n            <Typography variant=\"h6\">Todo's</Typography>\n          </Link>\n          <div className={classes.flexGrow} />\n\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default MenuAppBar;\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport MenuAppBar from \"./components/Navigation\";\nimport Todo from \"./todo/Todo\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#00838f\",\n        light: \"#4fb3bf\",\n        dark: \"#005662\",\n      },\n      secondary: {\n        main: \"#26c6da\",\n        light: \"#6ff9ff\",\n        dark: \"#0095a8\",\n      },\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div>\n          <MenuAppBar />\n        </div>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/todos\">\n              <Todo />\n            </Route>\n            <Route path=\"/\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}