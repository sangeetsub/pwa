{"version":3,"sources":["components/Progressbar.jsx","components/Dashboard.jsx","todo/InputTodo.jsx","todo/ListTodo.jsx","todo/Todo.jsx","components/Navigation.jsx","components/Calclories.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","width","LinearWithValueLabel","props","progressItem","name","unitName","completed","maxLimit","useState","addCompleted","setAddCompleted","classes","className","Card","color","Typography","variant","LinearProgress","value","Number","TextField","fullWidth","id","label","onChange","e","target","Button","button","onClick","progressItems","JSON","parse","localStorage","getItem","item","unitType","toPush","setItem","stringify","style","backgroundColor","theme","paper","padding","spacing","textAlign","palette","text","secondary","formControl","margin","flexGrow","CenteredGrid","setName","setUnitType","setMaxLimit","clearFields","getProgressItems","Grid","container","justify","xs","sm","allCompObj","Object","keys","length","allComp","forEach","key","push","toString","trackBarsRender","type","InputTodo","action","setAction","alignContent","Input","task","axios","post","then","res","data","getTodos","console","log","ListTodo","maxWidth","background","listItem","todos","deleteTodo","map","todo","Fragment","ListItem","_id","Divider","Paper","Todo","setTodos","useEffect","get","catch","err","delete","menuButton","marginRight","title","navigations","MenuAppBar","React","auth","anchorEl","setAnchorEl","open","Boolean","handleClose","AppBar","position","Toolbar","IconButton","edge","aria-label","to","aria-controls","aria-haspopup","event","currentTarget","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","weight","setWeight","height","setHeight","age","setAge","gender","setGender","activeLevel","setActiveLevel","myCalories","setMyCalories","FormControl","InputLabel","htmlFor","Select","native","inputProps","RadioGroup","row","FormControlLabel","control","Radio","toFixed","App","createMuiTheme","primary","main","light","dark","ThemeProvider","path","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9b7e6c0c.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Typography from '@material-ui/core/Typography';\nimport {Card,Button,TextField} from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n});\n\nexport default function LinearWithValueLabel(props) {\n    const {  name, unitName, completed, maxLimit} = props.progressItem;\n    const [addCompleted, setAddCompleted] = useState(0);\n  const classes = useStyles();\n\n\n  const handleSubmit = () => {\n      const progressItems = JSON.parse(localStorage.getItem(\"progressItems\") || \"{}\");\n    let item = {\n      name : name,\n      unitType: unitName,\n      completed: Number(completed) + Number(addCompleted),\n      maxLimit: maxLimit,\n    }\n  const toPush = {...progressItems, [name]: item}\n  localStorage.setItem(\"progressItems\", JSON.stringify(toPush));\n  }\n\n\n  return (\n    <div className={classes.root}>\n        <Card color=\"#\">\n  <Typography variant=\"h4\">{name}</Typography>\n <LinearProgress variant=\"determinate\" value={(completed/maxLimit) * 100} color=\"secondary\" />\n  <Typography> {completed} {unitName} Out of {maxLimit} done. ({Number(maxLimit) - Number(completed)} More to go)</Typography>\n    <TextField\n            fullWidth\n            id=\"completed\"\n            label=\"Completed \"\n            variant=\"outlined\"\n            value={addCompleted}\n            onChange={(e) => setAddCompleted(e.target.value)}\n          />\n           <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Add\n          </Button>\n        </Card>\n   <div style={{backgroundColor:\"gray\"}}><br></br></div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Fab from '@material-ui/core/Fab';\nimport { Card, Typography } from \"@material-ui/core\";\n\nimport ProgressBar from './Progressbar';\nimport { keys } from \"@material-ui/core/styles/createBreakpoints\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  root: {\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    button: {\n      margin: theme.spacing(1, 0, 1, 0),\n    },\n    flexGrow: 1,\n  },\n}));\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [unitType, setUnitType] = useState(\"\");\n  const [maxLimit, setMaxLimit] = useState(\"male\");\n\n  const clearFields = () => {\n          setName(\"\");\n          setMaxLimit(\"\");\n          setUnitType(\"\");\n  }\n\n  const handleSubmit = () => {\n  const progressItems = getProgressItems();\n    let item = {\n      name : name,\n      unitType: unitType,\n      completed: 0,\n      maxLimit: maxLimit,\n    }\n  const toPush = {...progressItems, [name]: item}\n  localStorage.setItem(\"progressItems\", JSON.stringify(toPush));\n  clearFields();\n  };\n\n  const getProgressItems = () => JSON.parse(localStorage.getItem(\"progressItems\") || \"{}\");\n\n\n  const trackBarsRender = () => {\n    const allCompObj = getProgressItems();\n    if(Object.keys(allCompObj).length == 0){\n      return <div>No Items</div>\n    } else {\n  const allComp = [];\n  Object.keys(allCompObj).forEach(key => {\n    allComp.push(<ProgressBar progressItem={allCompObj[key.toString()]}/>)\n  });\n  return allComp;\n    }\n}\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={11} sm={8}>\n          {trackBarsRender()}\n        </Grid>\n        <Grid item xs={11} sm={8}>\n          <h2>\n          Create Progress Bar\n          </h2>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            variant=\"outlined\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"unitNae\"\n            label=\"Unit Name \"\n            variant=\"outlined\"\n            value={unitType}\n            onChange={(e) => setUnitType(e.target.value)}\n          />\n        </Grid>\n                <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"maxLimit\"\n            type=\"Number\"\n            label=\"Goal Amount\"\n            variant=\"outlined\"\n            value={maxLimit}\n            onChange={(e) => setMaxLimit(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Create\n          </Button>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <Button\n            onClick={() => {\n              clearFields();\n            }}\n            color=\"secondary\"\n          >\n            Clear\n          </Button>\n\n        </Grid>\n\n        <Grid item xs={11} sm={7}>\n          <p>&copy; Sangeet Subedi, 2020</p>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Input, Button } from \"@material-ui/core\";\n\nfunction InputTodo(props) {\n  const [action, setAction] = useState(\"\");\n\n  const addTodo = () => {\n    const task = { action: action };\n\n    if (task.action && task.action.length > 0) {\n      axios.post(\"http://localhost:8000/api/todos\", task).then((res) => {\n        if (res.data) {\n          props.getTodos();\n          setAction(\"\");\n        }\n      });\n    } else {\n      console.log(\"input field required\");\n    }\n  };\n\n  return (\n    <Grid container justify=\"center\" alignContent=\"center\" spacing={2}>\n      <Grid item xs={11} sm={7}>\n        <Input\n          fullWidth\n          type=\"text\"\n          onChange={(e) => setAction(e.target.value)}\n          value={action}\n        />\n      </Grid>\n      <Grid item xs={11} sm={7}>\n        <Button color=\"primary\" variant=\"outlined\" onClick={addTodo}>\n          Add Todo\n        </Button>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default InputTodo;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { Typography, Paper } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nfunction ListTodo(props) {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    listItem: {\n      backgroundColor: \"#F0F8FF\",\n    },\n  }));\n\n  const classes = useStyles();\n\n  const { todos, deleteTodo } = props;\n  return (\n    <div>\n      {todos && todos.length > 0 ? (\n        todos.map((todo) => {\n          return (\n            <React.Fragment>\n              <Grid container justify=\"center\" alignContent=\"center\">\n                <Grid item xs={10} sm={6} className={classes.listItem}>\n                  <ListItem key={todo._id}>\n                    <Typography>{todo.action}</Typography>\n                  </ListItem>\n                  <Divider />\n                </Grid>\n\n                <Grid item xs={1} sm={1}>\n                  <Button\n                    key={todo._id}\n                    onClick={() => deleteTodo(todo._id)}\n                    color=\"primary\"\n                    variant=\"outlined\"\n                  >\n                    <DeleteIcon /> Delete\n                  </Button>\n                </Grid>\n              </Grid>\n              <br></br>\n            </React.Fragment>\n          );\n        })\n      ) : (\n        <Paper>\n          <ListItem> No Todo(s)</ListItem>\n        </Paper>\n      )}\n    </div>\n  );\n}\n\nexport default ListTodo;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InputTodo from \"./InputTodo\";\nimport ListTodo from \"./ListTodo\";\n\nfunction Todo() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  const getTodos = () => {\n    axios\n      .get(\"http://localhost:8000/api/todos\")\n      .then((res) => {\n        if (res.data) {\n          setTodos(res.data);\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const deleteTodo = (id) => {\n    axios\n      .delete(`http://localhost:8000/api/todos/${id}`)\n      .then((res) => {\n        if (res.data) {\n          getTodos();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  return (\n    <div className=\"Center\">\n      <h1> My Todo(s) </h1>\n      <InputTodo getTodos={getTodos} />\n      <br></br>\n      <ListTodo todos={todos} deleteTodo={deleteTodo} />\n    </div>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Link } from \"react-router-dom\";\nimport Todo from \"../todo/Todo\";\nimport Dashboard from \"./Dashboard\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  navigations: {\n    color: \"#ffffff\",\n    flexGrow: 0.02,\n  },\n  flexGrow: {\n    flexGrow: 1,\n  },\n}));\n\nfunction MenuAppBar() {\n  const classes = useStyles();\n  const [auth, setAuth] = React.useState(true);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleChange = (event) => {\n    setAuth(event.target.checked);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to=\"/\" className={classes.navigations}>\n            <Typography variant=\"h6\">Progress</Typography>\n          </Link>\n          <Link to=\"/calclories\" className={classes.navigations}>\n            <Typography variant=\"h6\">Calclories</Typography>\n          </Link>\n          <Link to=\"/todos\" className={classes.navigations}>\n            <Typography variant=\"h6\">Todo's</Typography>\n          </Link>\n          <div className={classes.flexGrow} />\n\n          {auth && (\n            <div>\n              <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n              >\n                <AccountCircle />\n              </IconButton>\n              <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: \"top\",\n                  horizontal: \"right\",\n                }}\n                open={open}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose}>Profile</MenuItem>\n                <MenuItem onClick={handleClose}>My account</MenuItem>\n              </Menu>\n            </div>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default MenuAppBar;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n  root: {\n    formControl: {\n      margin: theme.spacing(3),\n    },\n    button: {\n      margin: theme.spacing(1, 0, 1, 0),\n    },\n    flexGrow: 1,\n  },\n}));\n\nexport default function CenteredGrid() {\n  const classes = useStyles();\n\n  const [weight, setWeight] = useState(\"\");\n  const [height, setHeight] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"male\");\n  const [activeLevel, setActiveLevel] = useState(\"\");\n  const [myCalories, setMyCalories] = useState(0);\n\n  const handleSubmit = () => {\n    let myCalories = 0;\n    if (gender === \"male\") {\n      myCalories =\n        (66 + 6.2 * weight + 12.7 * height - 6.76 * age) *\n        (activeLevel ? activeLevel : 1);\n      setMyCalories(myCalories.toFixed(2));\n    } else {\n      myCalories =\n        (655.1 + 4.35 * weight + 4.7 * height - 4.7 * age) *\n        (activeLevel ? activeLevel : 1);\n      setMyCalories(myCalories.toFixed(2));\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={1} justify=\"center\">\n        <Grid item xs={11} sm={8}>\n          <h2>\n            Please enter your info down below to calculate your calories lost\n            per day.\n          </h2>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"weight\"\n            type=\"Number\"\n            label=\"Weight (lbs)\"\n            variant=\"outlined\"\n            value={weight}\n            onChange={(e) => setWeight(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"height\"\n            type=\"Number\"\n            label=\"Height (inches)\"\n            variant=\"outlined\"\n            value={height}\n            onChange={(e) => setHeight(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <TextField\n            fullWidth\n            id=\"age\"\n            type=\"Number\"\n            label=\"Age\"\n            variant=\"outlined\"\n            value={age}\n            onChange={(e) => setAge(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <FormControl\n            variant=\"outlined\"\n            className={classes.formControl}\n            fullWidth\n          >\n            <InputLabel htmlFor=\"outlined-age-native-simple\">\n              Active Label\n            </InputLabel>\n            <Select\n              native\n              value={activeLevel}\n              onChange={(e) => {\n                setActiveLevel(e.target.value);\n              }}\n              inputProps={{\n                name: \"activeLevel\",\n                id: \"outlined-age-native-simple\",\n              }}\n            >\n              <option value=\"\" aria-label=\"None\" />\n              <option value={1.2}>Little to None</option>\n              <option value={1.37}>Slightly</option>\n              <option value={1.55}>Moderate</option>\n              <option value={1.725}>Very</option>\n              <option value={1.9}>Extra</option>\n            </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <RadioGroup\n            row\n            aria-label=\"gender\"\n            name=\"gender1\"\n            value={gender}\n            onChange={(e) => setGender(e.target.value)}\n            className=\"Center\"\n          >\n            <FormControlLabel\n              value=\"female\"\n              control={<Radio />}\n              label=\"Female\"\n            />\n            <FormControlLabel value=\"male\" control={<Radio />} label=\"Male\" />\n          </RadioGroup>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={handleSubmit}\n          >\n            Calculate\n          </Button>\n        </Grid>\n        <Grid item xs={11} sm={7}>\n          <Button\n            onClick={() => {\n              setAge(\"\");\n              setGender(\"male\");\n              setHeight(\"\");\n              setWeight(\"\");\n              setActiveLevel(\"\");\n              setMyCalories(0);\n            }}\n            color=\"secondary\"\n          >\n            Clear\n          </Button>\n        </Grid>\n\n        <Grid item xs={11} sm={7}>\n          <h2>{`You've lost : ${myCalories} calories today.`}</h2>\n          <p>&copy; Sangeet Subedi, 2020</p>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport MenuAppBar from \"./components/Navigation\";\nimport Calclories from './components/Calclories';\nimport Todo from \"./todo/Todo\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main: \"#00838f\",\n        light: \"#4fb3bf\",\n        dark: \"#005662\",\n      },\n      secondary: {\n        main: \"#26c6da\",\n        light: \"#6ff9ff\",\n        dark: \"#0095a8\",\n      },\n    },\n  });\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div>\n          <MenuAppBar />\n        </div>\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/todos\">\n              <Todo />\n            </Route>\n              <Route path=\"/calclories\">\n              <Calclories />\n            </Route>\n            <Route path=\"/\">\n              <Dashboard />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}